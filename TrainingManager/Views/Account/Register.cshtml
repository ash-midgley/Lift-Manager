@model TrainingManager.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<h2 class="text-center">@ViewBag.Title</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4 class="text-center">Create a new account.</h4>
    <div class="row" id="register-input-row">
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.Name, new { @class = "control-label" })
            <div>
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Name)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "control-label" })
            <div>
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Email)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Gender, "Gender", new { @class = "control-label" })
            <div>
                @Html.DropDownListFor(m => m.Gender, new SelectList(Model.Genders), "", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Gender)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "control-label" })
            <div>
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Password)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label" })
            <div>
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ConfirmPassword)
            </div>
        </div>
    </div>

    <div class="row" id="training-types-container">
        @foreach (var type in Model.TrainingTypes)
        {
            <div class="card text-center training-type-card">
                <img class="card-img-top" src="~/img/@type.FileName" height="120" alt="@type.Name">
                <div class="card-body">
                    @Html.LabelFor(m => m.TrainingTypeId, type.Name, new { @style = "margin-top: 15px;" })
                    <br />@Html.RadioButtonFor(m => m.TrainingTypeId, type.Id, new { @style = "margin-bottom: 25px;" })
                </div>
            </div>
        }
        <div class="text-center" id="training-type-validation">
            @Html.ValidationMessageFor(m => m.TrainingTypeId)
        </div>
    </div>

    <hr />
    <div class="form-group text-center">
        <div>
            <input type="submit" class="btn btn-lg btn-success" value="Register" />
        </div>
    </div>
}
