@model TrainingManager.ViewModels.PlansViewModel
@{
    ViewBag.Title = Model.Heading;
}

<h2 class="text-center">@Model.Heading</h2>
<hr />

@if (Model.PlansToDisplay.Count() > 0)
{
    using (Html.BeginForm("Search", "Plans"))
    {
        <div id="searchPlans" class="form-group text-center">
            <div id="searchPlans" class="input-group">
                @Html.TextBoxFor(m => m.SearchTerm, new { @class = "form-control", placeholder = "Search by User, Plan or Rating..." })
                <span class="input-group-addon">
                    <i class="fa fa-search"></i>
                </span>
            </div>
        </div>
    }

    foreach (var plan in Model.PlansToDisplay)
    {
        <div class="row plan-block">
            <div class="col-2 plan-rating">
                @if (plan.RatingCount != 1)
                {
                    <span class="badge badge-danger plan-rating-label">@plan.RatingCount ratings</span>
                }
                @if (plan.RatingCount == 1)
                {
                    <span class="badge badge-danger plan-rating-label">@plan.RatingCount rating</span>
                }
                <div class="rating-value">@plan.Rating/5</div>
            </div>

            <div class="col-8 text-center middle-content">
                <a href="@Url.Action("Index", "User", new { Id = plan.UserId })">@plan.User.Name</a>
                <div class="plan-name">@plan.Name</div>
                @if (Model.ShowActions && plan.UserId != Model.UserId)
                {
                    <input data-plan-id="@plan.Id" class="js-star-rating rating rating-loading" value="@(Model.Ratings.Contains(plan.Id) ? (Model.Ratings.SingleOrDefault(r => r.Key == plan.Id)).FirstOrDefault().Value.ToString() : "0")" data-min="0" data-max="5" data-step="1" data-size="xxs" data-show-caption="false" />
                }
                else
                {
                    <input class="rating rating-loading" data-min="0" data-max="5" data-size="xxs" data-show-caption="false" disabled />
                }
            </div>

            <div class="col-2 actions">
                @if (Model.ShowActions)
                {
                    <button class="doubleBtn btn btn-sm btn-success" onclick="location.href='@Url.Action("Summary", "Plans", new { id = plan.Id })'">View</button>
                    if (plan.UserId == Model.UserId)
                    {
                        <button class="doubleBtn btn btn-sm pull-right" disabled>Favourite?</button>
                    }
                    else
                    {
                        <button data-plan-id="@plan.Id" class="doubleBtn btn btn-sm pull-right @(Model.Favourites.Contains(plan.Id) ? "btn-info" : "btn-inverse") js-toggle-favourite">@(Model.Favourites.Contains(plan.Id) ? "Favourite" : "Favourite?")</button>
                    }
                }
                else
                {
                    <button id="viewBtn" class="btn btn-success" onclick="location.href='@Url.Action("Summary", "Plans", new { id = plan.Id })'">View</button>
                }
            </div>
        </div>
    }
}
else
{
    <p class="alert alert-info text-center">No user plans have been created.</p>
}

@section scripts
{
    <script>
        $(document).ready(function () {
            IndexController.init();
        });
    </script>
}