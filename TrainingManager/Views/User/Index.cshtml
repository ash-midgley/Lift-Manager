@model TrainingManager.ViewModels.UserViewModel
@{
    ViewBag.Title = Model.Header;
}

<div class="row user-block" style="margin-top: 20px;">
    <div class="card">
        <h3 class="text-center" style="margin-bottom: 20px;">Details</h3>
        <table class="table" id="user-table">
            <tr>
                <td class="left-col">Name:</td>
                <td class="text-center">@Model.User.Name</td>
            </tr>
            <tr>
                <td class="left-col">Gender:</td>
                <td class="text-center">@Model.User.Gender</td>
            </tr>
            <tr>
                <td class="left-col">Date Joined:</td>
                <td class="text-center">@Model.User.DateJoined.ToShortDateString()</td>
            </tr>
            <tr>
                <td class="left-col"># of Plans:</td>
                <td class="text-center">@Model.PlanCount</td>
            </tr>
            <tr>
                <td class="left-col"># of Favourites:</td>
                <td class="text-center">@Model.Favourites.Count()</td>
            </tr>
            <tr>
                <td class="left-col"># of Ratings:</td>
                <td class="text-center">@Model.Ratings.Count()</td>
            </tr>
        </table>
    </div>
</div>
<div class="row user-block">
    <div class="card">
        <h3 class="text-center">Type</h3>
        <hr />
        <div style="margin: 20px;">
            <h4 class="text-center"><i>@Model.User.TrainingTypeName</i></h4>
        </div>
        <div class="text-center" style="margin-bottom:20px;">
            <img src="~/img/@Model.TrainingTypeFileName" id="user-image" />
        </div>
    </div>
</div>
<div class="row user-block">
    <div class="card">
        <h3 class="text-center">Favourites</h3>
        <hr />
        @if (Model.BarChartData.Length == 0)
        {
            <p class="alert alert-info text-center no-metrics">No favourites metrics to display.</p>
        }
        else
        {
            <canvas id="myBarChart"></canvas>
        }
    </div>
</div>
<div class="row user-block">
    <div class="card">
        <h3 class="text-center">Views</h3>
        <hr />
        @if (Model.PieChartData.Length == 0)
        {
            <p class="alert alert-info text-center no-metrics">No views metrics to display.</p>
        }
        else
        {
            <canvas id="myPieChart" height="120"></canvas>
        }
    </div>
</div>

@section Scripts{
    <script>
        $(function () {
            var model = @Html.Raw(Json.Encode(Model));

            var backColors = new Array();
            var borderColors = new Array();
            for(i = 0; i < model.PlanCount; i++){
                var r = Math.floor(Math.random() * 256);
                var g = Math.floor(Math.random() * 256);
                var b = Math.floor(Math.random() * 256);
                var backColor = 'rgba('+r+', '+g+', '+b+', 0.5)';
                var borderColor = 'rgba('+r+', '+g+', '+b+', 1)';
                backColors.push(backColor);
                borderColors.push(borderColor);
            };

            var ctx = document.getElementById("myBarChart").getContext('2d');
            var myBarChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: model.ChartLabels,
                    datasets: [{
                        label: 'Favourites',
                        data: model.BarChartData,
                        backgroundColor: backColors,
                        borderColor: borderColors,
                        borderWidth: 2
                    }],
                    scaleStepWidth: 1
                },
                options: {
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    }
                }
            });

            ctx = document.getElementById("myPieChart").getContext('2d');
            var myPieChart = new Chart(ctx, {
                type: 'pie',
                data: {
                    datasets: [{
                        data: model.PieChartData,
                        backgroundColor: backColors,
                        borderColor: borderColors
                    }],
                    labels: model.ChartLabels
                }
            });
        });
    </script>
}